openapi: "3.0.2"
info:
  title: Bot API
  description: API
  contact:
    name: Source
    url: https://github.com/kennib/necsus
  version: 1.0

servers:
  - url: '{url}'
    description: Url to your bot
    variables:
      url:
        description: Full url to your bot.
        default: http://localhost:5000

paths:
  /{path}:
    post:
      description: Endpoint that receives new messages from the chat.
      responses:
        '200':
          description: |
            A message to send to the chat room in reply.

            Include a `"text"` key in the response to reply immediately with a message. The message will be sent to the same room as where the received message originated. If you wish the message to go to another room, include a `"room"` key in the response.

            If the bot does not want to reply with a message, just respond with an empty 200 response (or at least without the `"text"` key).
          content:
            application/json:
              schema:
                type: object
                properties:
                  room:
                    type: string
                    example: "my_room"
                  text:
                    type: string
                    example: "Hello!"
                  author:
                    type: string
                    example: 'Cool Bot'

      requestBody:
        description: |
          A new message in the chat room.


          Note that `params` is a key/value dictionary formed from named
          subgroups in the 'responds to' field. For example, if the 'responds to'
          field has `(?P<greeting>hi|hello) (?P<name>.*)`, and a message is
          "hello sam", then the `params` value will be `{"greeting": "hello",
          "name": "sam"}`.

        required: true
        content:
          'application/json':
            schema:
              type: object
              required:
                - room
                - author
                - text
                - params
              properties:
                room:
                  type: string
                  example: 'party-room'
                author:
                  type: string
                  nullable: true
                  example: 'Kenni'
                text:
                  type: string
                  example: 'Hello sam'
                params:
                  type: object
                  description: |
                    A key/value dictionary formed from named subgroups in the 'responds to' field.
                  example: {"greeting": "Hello", "name": "sam"}

    parameters:
    - name: path
      in: path
      description: Path to the registered endpoint
      required: false
      schema:
        type: string
